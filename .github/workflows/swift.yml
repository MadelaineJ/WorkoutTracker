name: "Build iOS app"

on:
  # manual trigger but change to any supported event
  # see addl: https://www.andrewhoog.com/post/how-to-build-react-native-android-app-with-github-actions/#3-run-build-workflow
  workflow_dispatch:
    branches: [main]

jobs:
  build_with_signing:
    runs-on: macos-13
    steps:
      #Ensure the xcode version is available		
      - name: List Xcode installations
        run: sudo ls -1 /Applications | grep "Xcode"

      #Select your required version
      - name: Select Xcode 15.1
        run: sudo xcode-select -s /Applications/Xcode_15.1.app/Contents/Developer
      # this was more debug as was curious what came pre-installed
      # GitHub shares this online, e.g. https://github.com/actions/runner-images/blob/macOS-12/20230224.1/images/macos/macos-12-Readme.md
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: checkout repository
        uses: actions/checkout@v3

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

      - name: build archive
        run: |
          xcodebuild -scheme "WorkoutTracker" \
          -archivePath $RUNNER_TEMP/workouttracker.xcarchive \
          -sdk iphoneos \
          -configuration Debug \
          -destination generic/platform=iOS \
          clean archive

  # test:
  #     needs: build_with_signing
  #     runs-on: macos-13
  #     steps:
  #       - name: checkout repository
  #         uses: actions/checkout@v3

  #       - name: Select Xcode 15.1
  #         run: sudo xcode-select -s /Applications/Xcode_15.1.app/Contents/Developer

  #       - name: Run tests
  #         run: |
  #           xcodebuild test -scheme "WorkoutTrackerTests" \
  #           -destination 'platform=iOS Simulator,OS=17.2,name=iPhone 15 Pro'


  #           { platform:iOS Simulator, id:637EDCC8-73B3-420D-836A-A60DDDA9C02B, OS:17.2, name:iPhone 15 Pro }